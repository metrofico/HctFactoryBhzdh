package com.hzbhd.canbus.ui_datas;

import org.json.JSONException;
import org.json.JSONObject;

public class GeneralAirData {
   public static boolean ac;
   public static boolean ac_auto;
   public static int ac_econ;
   public static boolean ac_max;
   public static boolean amb;
   public static boolean aqs;
   public static boolean auto;
   public static int auto_1_2;
   public static boolean auto_2;
   public static boolean auto_cycle;
   public static boolean auto_defog;
   public static boolean auto_manual;
   public static boolean auto_wind_light;
   public static int auto_wind_lv;
   public static boolean auto_wind_strong;
   public static boolean big_wind_light;
   public static boolean blow_negative;
   public static boolean blow_positive;
   public static String center_wheel;
   public static boolean clean_air;
   public static boolean climate;
   public static int cycle_in_out_close;
   public static boolean dual;
   public static boolean eco;
   public static boolean econ;
   public static boolean fahrenheit_celsius;
   public static boolean fast;
   public static boolean front_auto_wind_model;
   public static boolean front_auto_wind_speed;
   public static boolean front_defog;
   public static boolean front_left_auto_wind;
   public static boolean front_left_blow_foot;
   public static boolean front_left_blow_head;
   public static boolean front_left_blow_window;
   public static int front_left_seat_cold_level;
   public static int front_left_seat_heat_level;
   public static String front_left_temperature;
   public static boolean front_right_auto_wind;
   public static boolean front_right_auto_wind_speed;
   public static boolean front_right_blow_foot;
   public static boolean front_right_blow_head;
   public static boolean front_right_blow_window;
   public static int front_right_seat_cold_level;
   public static int front_right_seat_heat_level;
   public static String front_right_temperature;
   public static int front_right_wind_level;
   public static int front_wind_level;
   public static boolean front_window_heat;
   public static boolean hybrid_ac;
   public static int in_out_auto_cycle;
   public static boolean in_out_cycle;
   public static boolean ion;
   public static boolean is_left_seat_heat;
   public static boolean is_right_seat_heat;
   public static boolean left_set_seat_cold;
   public static boolean left_set_seat_heat;
   public static boolean manual;
   public static boolean max_cool;
   public static boolean max_front;
   public static boolean max_heat;
   public static boolean mono;
   public static boolean negative_ion;
   public static boolean normal;
   public static boolean off;
   public static String outdoorTemperature;
   public static String pm_value_level_in_car;
   public static String pm_value_level_out_car;
   public static boolean pollrn_removal;
   public static boolean positive_sequence;
   public static boolean power;
   public static boolean rear;
   public static boolean rear_ac;
   public static boolean rear_auto;
   public static boolean rear_auto_wind_model;
   public static boolean rear_auto_wind_speed;
   public static boolean rear_defog;
   public static boolean rear_dual;
   public static boolean rear_left_auto_wind;
   public static boolean rear_left_blow_foot;
   public static boolean rear_left_blow_head;
   public static boolean rear_left_blow_window;
   public static int rear_left_seat_cold_level;
   public static int rear_left_seat_heat_level;
   public static String rear_left_temperature;
   public static boolean rear_lock;
   public static boolean rear_power;
   public static boolean rear_right_auto_wind;
   public static boolean rear_right_blow_foot;
   public static boolean rear_right_blow_head;
   public static boolean rear_right_blow_window;
   public static int rear_right_seat_cold_level;
   public static int rear_right_seat_heat_level;
   public static String rear_right_temperature;
   public static boolean rear_sync;
   public static String rear_temperature;
   public static int rear_wind_level;
   public static boolean rest;
   public static boolean reverse_order;
   public static boolean right_set_seat_cold;
   public static boolean right_set_seat_heat;
   public static boolean seat_steering_wheel_synchronization;
   public static boolean small_wind_light;
   public static boolean soft;
   public static boolean steering_wheel_heating;
   public static boolean swing;
   public static boolean sync;
   public static boolean sync_temperature;
   public static boolean threeZone;
   public static boolean windshield_deicing;

   public static String getAirInfo() {
      JSONObject var0 = new JSONObject();

      try {
         var0.put("power", power);
         var0.put("ac", ac);
         var0.put("ac_auto", ac_auto);
         var0.put("ac_max", ac_max);
         var0.put("amb", amb);
         var0.put("auto", auto);
         var0.put("auto_2", auto_2);
         var0.put("dual", dual);
         var0.put("in_out_cycle", in_out_cycle);
         var0.put("aqs", aqs);
         var0.put("front_defog", front_defog);
         var0.put("rear_defog", rear_defog);
         var0.put("rear_power", rear_power);
         var0.put("rear_lock", rear_lock);
         var0.put("eco", eco);
         var0.put("econ", econ);
         var0.put("ac_econ", ac_econ);
         var0.put("climate", climate);
         var0.put("sync_temperature", sync_temperature);
         var0.put("sync", sync);
         var0.put("max_cool", max_cool);
         var0.put("ion", ion);
         var0.put("left_set_seat_heat", left_set_seat_heat);
         var0.put("right_set_seat_heat", right_set_seat_heat);
         var0.put("left_set_seat_cold", left_set_seat_cold);
         var0.put("right_set_seat_cold", right_set_seat_cold);
         var0.put("in_out_auto_cycle", in_out_auto_cycle);
         var0.put("positive_sequence", positive_sequence);
         var0.put("reverse_order", reverse_order);
         var0.put("auto_cycle", auto_cycle);
         var0.put("clean_air", clean_air);
         var0.put("steering_wheel_heating", steering_wheel_heating);
         var0.put("seat_steering_wheel_synchronization", seat_steering_wheel_synchronization);
         var0.put("rear_auto", rear_auto);
         var0.put("auto_wind_lv", auto_wind_lv);
         var0.put("max_heat", max_heat);
         var0.put("front_window_heat", front_window_heat);
         var0.put("big_wind_light", big_wind_light);
         var0.put("small_wind_light", small_wind_light);
         var0.put("max_front", max_front);
         var0.put("rear", rear);
         var0.put("front_auto_wind_model", front_auto_wind_model);
         var0.put("rear_auto_wind_model", rear_auto_wind_model);
         var0.put("front_left_blow_window", front_left_blow_window);
         var0.put("front_left_blow_head", front_left_blow_head);
         var0.put("front_left_blow_foot", front_left_blow_foot);
         var0.put("front_left_auto_wind", front_left_auto_wind);
         var0.put("front_right_blow_window", front_right_blow_window);
         var0.put("front_right_blow_head", front_right_blow_head);
         var0.put("front_right_blow_foot", front_right_blow_foot);
         var0.put("front_right_auto_wind", front_right_auto_wind);
         var0.put("rear_left_blow_window", rear_left_blow_window);
         var0.put("rear_left_blow_head", rear_left_blow_head);
         var0.put("rear_left_blow_foot", rear_left_blow_foot);
         var0.put("rear_left_auto_wind", rear_left_auto_wind);
         var0.put("rear_right_blow_window", rear_right_blow_window);
         var0.put("rear_right_blow_head", rear_right_blow_head);
         var0.put("rear_right_blow_foot", rear_right_blow_foot);
         var0.put("rear_right_auto_wind", rear_right_auto_wind);
         var0.put("front_left_temperature", front_left_temperature);
         var0.put("front_right_temperature", front_right_temperature);
         var0.put("rear_left_temperature", rear_left_temperature);
         var0.put("rear_right_temperature", rear_right_temperature);
         var0.put("rear_temperature", rear_temperature);
         var0.put("center_wheel", center_wheel);
         var0.put("front_wind_level", front_wind_level);
         var0.put("front_auto_wind_speed", front_auto_wind_speed);
         var0.put("front_right_wind_level", front_right_wind_level);
         var0.put("front_right_auto_wind_speed", front_right_auto_wind_speed);
         var0.put("rear_wind_level", rear_wind_level);
         var0.put("rear_auto_wind_speed", rear_auto_wind_speed);
         var0.put("front_left_seat_heat_level", front_left_seat_heat_level);
         var0.put("front_right_seat_heat_level", front_right_seat_heat_level);
         var0.put("rear_left_seat_heat_level", rear_left_seat_heat_level);
         var0.put("rear_right_seat_heat_level", rear_right_seat_heat_level);
         var0.put("front_left_seat_cold_level", front_left_seat_cold_level);
         var0.put("front_right_seat_cold_level", front_right_seat_cold_level);
         var0.put("rear_left_seat_cold_level", rear_left_seat_cold_level);
         var0.put("rear_right_seat_cold_level", rear_right_seat_cold_level);
         var0.put("pm_value_level_in_car", pm_value_level_in_car);
         var0.put("pm_value_level_out_car", pm_value_level_out_car);
         var0.put("blow_positive", blow_positive);
         var0.put("blow_negative", blow_negative);
         var0.put("fahrenheit_celsius", fahrenheit_celsius);
         var0.put("manual", manual);
         var0.put("mono", mono);
         var0.put("auto_defog", auto_defog);
         var0.put("auto_wind_strong", auto_wind_strong);
         var0.put("auto_wind_light", auto_wind_light);
         var0.put("auto_manual", auto_manual);
         var0.put("swing", swing);
         var0.put("windshield_deicing", windshield_deicing);
         var0.put("pollrn_removal", pollrn_removal);
         var0.put("cycle_in_out_close", cycle_in_out_close);
         var0.put("soft", soft);
         var0.put("fast", fast);
         var0.put("normal", normal);
         var0.put("threeZone", threeZone);
         var0.put("rest", rest);
         var0.put("is_left_seat_heat", is_left_seat_heat);
         var0.put("is_right_seat_heat", is_right_seat_heat);
         var0.put("negative_ion", negative_ion);
         var0.put("rear_sync", rear_sync);
         var0.put("hybrid_ac", hybrid_ac);
      } catch (JSONException var2) {
         var2.printStackTrace();
      }

      return var0.toString();
   }
}
