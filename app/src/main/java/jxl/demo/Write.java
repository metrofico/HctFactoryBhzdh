package jxl.demo;

import java.io.File;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.Locale;
import java.util.TimeZone;
import jxl.CellReferenceHelper;
import jxl.CellView;
import jxl.HeaderFooter;
import jxl.Range;
import jxl.Workbook;
import jxl.WorkbookSettings;
import jxl.format.Alignment;
import jxl.format.Border;
import jxl.format.BorderLineStyle;
import jxl.format.Colour;
import jxl.format.Orientation;
import jxl.format.PageOrder;
import jxl.format.PageOrientation;
import jxl.format.PaperSize;
import jxl.format.ScriptStyle;
import jxl.format.UnderlineStyle;
import jxl.write.Blank;
import jxl.write.Boolean;
import jxl.write.DateFormat;
import jxl.write.DateFormats;
import jxl.write.DateTime;
import jxl.write.Formula;
import jxl.write.Label;
import jxl.write.Number;
import jxl.write.NumberFormat;
import jxl.write.NumberFormats;
import jxl.write.WritableCellFeatures;
import jxl.write.WritableCellFormat;
import jxl.write.WritableFont;
import jxl.write.WritableHyperlink;
import jxl.write.WritableImage;
import jxl.write.WritableSheet;
import jxl.write.WritableWorkbook;
import jxl.write.WriteException;

public class Write {
   private String filename;
   private WritableWorkbook workbook;

   public Write(String var1) {
      this.filename = var1;
   }

   private void writeBordersSheet(WritableSheet var1) throws WriteException {
      var1.getSettings().setProtected(true);
      var1.setColumnView(1, 15);
      var1.setColumnView(2, 15);
      var1.setColumnView(4, 15);
      WritableCellFormat var2 = new WritableCellFormat();
      var2.setBorder(Border.LEFT, BorderLineStyle.THICK);
      var1.addCell(new Label(1, 0, "Thick left", var2));
      var2 = new WritableCellFormat();
      var2.setBorder(Border.RIGHT, BorderLineStyle.DASHED);
      var1.addCell(new Label(2, 0, "Dashed right", var2));
      var2 = new WritableCellFormat();
      var2.setBorder(Border.TOP, BorderLineStyle.DOUBLE);
      var1.addCell(new Label(1, 2, "Double top", var2));
      var2 = new WritableCellFormat();
      var2.setBorder(Border.BOTTOM, BorderLineStyle.HAIR);
      var1.addCell(new Label(2, 2, "Hair bottom", var2));
      var2 = new WritableCellFormat();
      var2.setBorder(Border.ALL, BorderLineStyle.THIN);
      var1.addCell(new Label(4, 2, "All thin", var2));
      var2 = new WritableCellFormat();
      var2.setBorder(Border.TOP, BorderLineStyle.THICK);
      var2.setBorder(Border.LEFT, BorderLineStyle.THICK);
      var1.addCell(new Label(6, 2, "Two borders", var2));
      var1.addCell(new Label(20, 20, "Dislocated cell - after a page break"));
      var1.getSettings().setPaperSize(PaperSize.A3);
      var1.getSettings().setOrientation(PageOrientation.LANDSCAPE);
      var1.getSettings().setPageOrder(PageOrder.DOWN_THEN_RIGHT);
      var1.getSettings().setHeaderMargin(2.0);
      var1.getSettings().setFooterMargin(2.0);
      var1.getSettings().setTopMargin(3.0);
      var1.getSettings().setBottomMargin(3.0);
      HeaderFooter var3 = new HeaderFooter();
      var3.getCentre().append("Page Header");
      var1.getSettings().setHeader(var3);
      var3 = new HeaderFooter();
      var3.getRight().append("page ");
      var3.getRight().appendPageNumber();
      var1.getSettings().setFooter(var3);
      var1.addRowPageBreak(18);
      var1.insertRow(17);
      var1.insertRow(17);
      var1.removeRow(17);
      var1.addRowPageBreak(30);
      var1.addCell(new Label(10, 1, "Hidden column"));
      var1.addCell(new Label(3, 8, "Hidden row"));
      var1.setRowView(8, true);
      var2 = new WritableCellFormat();
      var2.setBorder(Border.ALL, BorderLineStyle.THICK, Colour.RED);
      var1.addCell(new Label(1, 5, "All thick red", var2));
      var2 = new WritableCellFormat();
      var2.setBorder(Border.TOP, BorderLineStyle.THIN, Colour.BLUE);
      var2.setBorder(Border.BOTTOM, BorderLineStyle.THIN, Colour.BLUE);
      var1.addCell(new Label(4, 5, "Top and bottom blue", var2));
   }

   private void writeDateFormatSheet(WritableSheet var1) throws WriteException {
      WritableCellFormat var5 = new WritableCellFormat(WritableWorkbook.ARIAL_10_PT);
      var5.setWrap(true);
      var1.setColumnView(0, 20);
      var1.setColumnView(2, 20);
      var1.setColumnView(3, 20);
      var1.setColumnView(4, 20);
      var1.getSettings().setFitWidth(2);
      var1.getSettings().setFitHeight(2);
      Calendar var15 = Calendar.getInstance(TimeZone.getTimeZone("GMT"));
      var15.set(1975, 4, 31, 15, 21, 45);
      var15.set(14, 660);
      Date var16 = var15.getTime();
      var15.set(1900, 0, 1, 0, 0, 0);
      var15.set(14, 0);
      Date var8 = var15.getTime();
      var15.set(1970, 0, 1, 0, 0, 0);
      Date var11 = var15.getTime();
      var15.set(1918, 10, 11, 11, 0, 0);
      Date var2 = var15.getTime();
      var15.set(1900, 0, 2, 0, 0, 0);
      Date var6 = var15.getTime();
      var15.set(1901, 0, 1, 0, 0, 0);
      Date var3 = var15.getTime();
      var15.set(1900, 4, 31, 0, 0, 0);
      Date var4 = var15.getTime();
      var15.set(1900, 1, 1, 0, 0, 0);
      Date var12 = var15.getTime();
      var15.set(1900, 0, 31, 0, 0, 0);
      Date var13 = var15.getTime();
      var15.set(1900, 2, 1, 0, 0, 0);
      Date var9 = var15.getTime();
      var15.set(1900, 1, 27, 0, 0, 0);
      Date var7 = var15.getTime();
      var15.set(1900, 1, 28, 0, 0, 0);
      Date var14 = var15.getTime();
      var15.set(1980, 5, 31, 12, 0, 0);
      Date var10 = var15.getTime();
      var15.set(1066, 9, 14, 0, 0, 0);
      Date var19 = var15.getTime();
      SimpleDateFormat var17 = new SimpleDateFormat("dd MMM yyyy HH:mm:ss.SSS");
      var17.setTimeZone(TimeZone.getTimeZone("GMT"));
      var1.addCell(new Label(0, 0, "All dates are " + var17.format(var16), var5));
      var1.addCell(new Label(0, 1, "Built in formats", var5));
      var1.addCell(new Label(2, 1, "Custom formats"));
      var1.addCell(new DateTime(0, 2, var16, new WritableCellFormat(DateFormats.FORMAT1), DateTime.GMT));
      var1.addCell(new DateTime(0, 3, var16, new WritableCellFormat(DateFormats.FORMAT2), DateTime.GMT));
      var1.addCell(new DateTime(0, 4, var16, new WritableCellFormat(DateFormats.FORMAT3)));
      var1.addCell(new DateTime(0, 5, var16, new WritableCellFormat(DateFormats.FORMAT4)));
      var1.addCell(new DateTime(0, 6, var16, new WritableCellFormat(DateFormats.FORMAT5)));
      var1.addCell(new DateTime(0, 7, var16, new WritableCellFormat(DateFormats.FORMAT6)));
      var1.addCell(new DateTime(0, 8, var16, new WritableCellFormat(DateFormats.FORMAT7), DateTime.GMT));
      var1.addCell(new DateTime(0, 9, var16, new WritableCellFormat(DateFormats.FORMAT8), DateTime.GMT));
      var1.addCell(new DateTime(0, 10, var16, new WritableCellFormat(DateFormats.FORMAT9), DateTime.GMT));
      var1.addCell(new DateTime(0, 11, var16, new WritableCellFormat(DateFormats.FORMAT10), DateTime.GMT));
      var1.addCell(new DateTime(0, 12, var16, new WritableCellFormat(DateFormats.FORMAT11), DateTime.GMT));
      var1.addCell(new DateTime(0, 13, var16, new WritableCellFormat(DateFormats.FORMAT12), DateTime.GMT));
      WritableCellFormat var18 = new WritableCellFormat(new DateFormat("dd MM yyyy"));
      var1.addCell(new Label(2, 2, "dd MM yyyy"));
      var1.addCell(new DateTime(3, 2, var16, var18, DateTime.GMT));
      var18 = new WritableCellFormat(new DateFormat("dd MMM yyyy"));
      var1.addCell(new Label(2, 3, "dd MMM yyyy"));
      var1.addCell(new DateTime(3, 3, var16, var18, DateTime.GMT));
      var18 = new WritableCellFormat(new DateFormat("hh:mm"));
      var1.addCell(new Label(2, 4, "hh:mm"));
      var1.addCell(new DateTime(3, 4, var16, var18, DateTime.GMT));
      var18 = new WritableCellFormat(new DateFormat("hh:mm:ss"));
      var1.addCell(new Label(2, 5, "hh:mm:ss"));
      var1.addCell(new DateTime(3, 5, var16, var18, DateTime.GMT));
      var18 = new WritableCellFormat(new DateFormat("H:mm:ss a"));
      var1.addCell(new Label(2, 5, "H:mm:ss a"));
      var1.addCell(new DateTime(3, 5, var16, var18, DateTime.GMT));
      var1.addCell(new DateTime(4, 5, var10, var18, DateTime.GMT));
      var18 = new WritableCellFormat(new DateFormat("mm:ss.SSS"));
      var1.addCell(new Label(2, 6, "mm:ss.SSS"));
      var1.addCell(new DateTime(3, 6, var16, var18, DateTime.GMT));
      WritableCellFormat var20 = new WritableCellFormat(new DateFormat("hh:mm:ss a"));
      var1.addCell(new Label(2, 7, "hh:mm:ss a"));
      var1.addCell(new DateTime(4, 7, var10, var20, DateTime.GMT));
      var1.addCell(new Label(0, 16, "Zero date " + var17.format(var8), var5));
      var1.addCell(new DateTime(0, 17, var8, new WritableCellFormat(DateFormats.FORMAT9), DateTime.GMT));
      var1.addCell(new Label(3, 16, "Zero date + 1 " + var17.format(var6), var5));
      var1.addCell(new DateTime(3, 17, var6, new WritableCellFormat(DateFormats.FORMAT9), DateTime.GMT));
      var1.addCell(new Label(3, 19, var17.format(var3), var5));
      var1.addCell(new DateTime(3, 20, var3, new WritableCellFormat(DateFormats.FORMAT9), DateTime.GMT));
      var1.addCell(new Label(3, 22, var17.format(var4), var5));
      var1.addCell(new DateTime(3, 23, var4, new WritableCellFormat(DateFormats.FORMAT9), DateTime.GMT));
      var1.addCell(new Label(3, 25, var17.format(var12), var5));
      var1.addCell(new DateTime(3, 26, var12, new WritableCellFormat(DateFormats.FORMAT9), DateTime.GMT));
      var1.addCell(new Label(3, 28, var17.format(var13), var5));
      var1.addCell(new DateTime(3, 29, var13, new WritableCellFormat(DateFormats.FORMAT9), DateTime.GMT));
      var1.addCell(new Label(3, 28, var17.format(var13), var5));
      var1.addCell(new DateTime(3, 29, var13, new WritableCellFormat(DateFormats.FORMAT9), DateTime.GMT));
      var1.addCell(new Label(3, 31, var17.format(var9), var5));
      var1.addCell(new DateTime(3, 32, var9, new WritableCellFormat(DateFormats.FORMAT9), DateTime.GMT));
      var1.addCell(new Label(3, 34, var17.format(var7), var5));
      var1.addCell(new DateTime(3, 35, var7, new WritableCellFormat(DateFormats.FORMAT9), DateTime.GMT));
      var1.addCell(new Label(3, 37, var17.format(var14), var5));
      var1.addCell(new DateTime(3, 38, var14, new WritableCellFormat(DateFormats.FORMAT9), DateTime.GMT));
      var1.addCell(new Label(0, 19, "Zero UTC date " + var17.format(var11), var5));
      var1.addCell(new DateTime(0, 20, var11, new WritableCellFormat(DateFormats.FORMAT9), DateTime.GMT));
      var1.addCell(new Label(0, 22, "Armistice date " + var17.format(var2), var5));
      var1.addCell(new DateTime(0, 23, var2, new WritableCellFormat(DateFormats.FORMAT9), DateTime.GMT));
      var1.addCell(new Label(0, 25, "Battle of Hastings " + var17.format(var19), var5));
      var1.addCell(new DateTime(0, 26, var19, new WritableCellFormat(DateFormats.FORMAT2), DateTime.GMT));
   }

   private void writeFormulaSheet(WritableSheet var1) throws WriteException {
      var1.addCell(new Number(0, 0, 15.0));
      var1.addCell(new Number(0, 1, 16.0));
      var1.addCell(new Number(0, 2, 10.0));
      var1.addCell(new Number(0, 3, 12.0));
      var1.setColumnView(2, 20);
      WritableCellFormat var2 = new WritableCellFormat();
      var2.setAlignment(Alignment.RIGHT);
      var2.setWrap(true);
      CellView var3 = new CellView();
      var3.setSize(6400);
      var3.setFormat(var2);
      var1.setColumnView(3, var3);
      var1.addCell(new Formula(2, 0, "A1+A2"));
      var1.addCell(new Label(3, 0, "a1+a2"));
      var1.addCell(new Formula(2, 1, "A2 * 3"));
      var1.addCell(new Label(3, 1, "A2 * 3"));
      var1.addCell(new Formula(2, 2, "A2+A1/2.5"));
      var1.addCell(new Label(3, 2, "A2+A1/2.5"));
      var1.addCell(new Formula(2, 3, "3+(a1+a2)/2.5"));
      var1.addCell(new Label(3, 3, "3+(a1+a2)/2.5"));
      var1.addCell(new Formula(2, 4, "(a1+a2)/2.5"));
      var1.addCell(new Label(3, 4, "(a1+a2)/2.5"));
      var1.addCell(new Formula(2, 5, "15+((a1+a2)/2.5)*17"));
      var1.addCell(new Label(3, 5, "15+((a1+a2)/2.5)*17"));
      var1.addCell(new Formula(2, 6, "SUM(a1:a4)"));
      var1.addCell(new Label(3, 6, "SUM(a1:a4)"));
      var1.addCell(new Formula(2, 7, "SUM(a1:a4)/4"));
      var1.addCell(new Label(3, 7, "SUM(a1:a4)/4"));
      var1.addCell(new Formula(2, 8, "AVERAGE(A1:A4)"));
      var1.addCell(new Label(3, 8, "AVERAGE(a1:a4)"));
      var1.addCell(new Formula(2, 9, "MIN(5,4,1,2,3)"));
      var1.addCell(new Label(3, 9, "MIN(5,4,1,2,3)"));
      var1.addCell(new Formula(2, 10, "ROUND(3.14159265, 3)"));
      var1.addCell(new Label(3, 10, "ROUND(3.14159265, 3)"));
      var1.addCell(new Formula(2, 11, "MAX(SUM(A1:A2), A1*A2, POWER(A1, 2))"));
      var1.addCell(new Label(3, 11, "MAX(SUM(A1:A2), A1*A2, POWER(A1, 2))"));
      var1.addCell(new Formula(2, 12, "IF(A2>A1, \"A2 bigger\", \"A1 bigger\")"));
      var1.addCell(new Label(3, 12, "IF(A2>A1, \"A2 bigger\", \"A1 bigger\")"));
      var1.addCell(new Formula(2, 13, "IF(A2<=A1, \"A2 smaller\", \"A1 smaller\")"));
      var1.addCell(new Label(3, 13, "IF(A2<=A1, \"A2 smaller\", \"A1 smaller\")"));
      var1.addCell(new Formula(2, 14, "IF(A3<=10, \"<= 10\")"));
      var1.addCell(new Label(3, 14, "IF(A3<=10, \"<= 10\")"));
      var1.addCell(new Formula(2, 15, "SUM(1,2,3,4,5)"));
      var1.addCell(new Label(3, 15, "SUM(1,2,3,4,5)"));
      var1.addCell(new Formula(2, 16, "HYPERLINK(\"http://www.andykhan.com/jexcelapi\", \"JExcelApi Home Page\")"));
      var1.addCell(new Label(3, 16, "HYPERLINK(\"http://www.andykhan.com/jexcelapi\", \"JExcelApi Home Page\")"));
      var1.addCell(new Formula(2, 17, "3*4+5"));
      var1.addCell(new Label(3, 17, "3*4+5"));
      var1.addCell(new Formula(2, 18, "\"Plain text formula\""));
      var1.addCell(new Label(3, 18, "Plain text formula"));
      var1.addCell(new Formula(2, 19, "SUM(a1,a2,-a3,a4)"));
      var1.addCell(new Label(3, 19, "SUM(a1,a2,-a3,a4)"));
      var1.addCell(new Formula(2, 20, "2*-(a1+a2)"));
      var1.addCell(new Label(3, 20, "2*-(a1+a2)"));
      var1.addCell(new Formula(2, 21, "'Number Formats'!B1/2"));
      var1.addCell(new Label(3, 21, "'Number Formats'!B1/2"));
      var1.addCell(new Formula(2, 22, "IF(F22=0, 0, F21/F22)"));
      var1.addCell(new Label(3, 22, "IF(F22=0, 0, F21/F22)"));
      var1.addCell(new Formula(2, 23, "RAND()"));
      var1.addCell(new Label(3, 23, "RAND()"));
      StringBuffer var4 = new StringBuffer();
      var4.append("'");
      var4.append(this.workbook.getSheet(0).getName());
      var4.append("'!");
      var4.append(CellReferenceHelper.getCellReference(9, 18));
      var4.append("*25");
      var1.addCell(new Formula(2, 24, var4.toString()));
      var1.addCell(new Label(3, 24, var4.toString()));
      var1.addCell(new Formula(2, 25, "NOW()", new WritableCellFormat(DateFormats.DEFAULT)));
      var1.addCell(new Label(3, 25, "NOW()"));
      var1.addCell(new Formula(2, 26, "$A$2+A3"));
      var1.addCell(new Label(3, 26, "$A$2+A3"));
      var1.addCell(new Formula(2, 27, "IF(COUNT(A1:A9,B1:B9)=0,\"\",COUNT(A1:A9,B1:B9))"));
      var1.addCell(new Label(3, 27, "IF(COUNT(A1:A9,B1:B9)=0,\"\",COUNT(A1:A9,B1:B9))"));
      var1.addCell(new Formula(2, 28, "SUM(A1,A2,A3,A4)"));
      var1.addCell(new Label(3, 28, "SUM(A1,A2,A3,A4)"));
      var1.addCell(new Label(1, 29, "a1"));
      var1.addCell(new Formula(2, 29, "SUM(INDIRECT(ADDRESS(2,29)):A4)"));
      var1.addCell(new Label(3, 29, "SUM(INDIRECT(ADDRESS(2,29):A4)"));
      var1.addCell(new Formula(2, 30, "COUNTIF(A1:A4, \">=12\")"));
      var1.addCell(new Label(3, 30, "COUNTIF(A1:A4, \">=12\")"));
      var1.addCell(new Formula(2, 31, "MAX($A$1:$A$4)"));
      var1.addCell(new Label(3, 31, "MAX($A$1:$A$4)"));
      var1.addCell(new Formula(2, 32, "OR(A1,TRUE)"));
      var1.addCell(new Label(3, 32, "OR(A1,TRUE)"));
      var1.addCell(new Formula(2, 33, "ROWS(A1:C14)"));
      var1.addCell(new Label(3, 33, "ROWS(A1:C14)"));
      var1.addCell(new Formula(2, 34, "COUNTBLANK(A1:C14)"));
      var1.addCell(new Label(3, 34, "COUNTBLANK(A1:C14)"));
      var1.addCell(new Formula(2, 35, "IF(((F1=\"Not Found\")*(F2=\"Not Found\")*(F3=\"\")*(F4=\"\")*(F5=\"\")),1,0)"));
      var1.addCell(new Label(3, 35, "IF(((F1=\"Not Found\")*(F2=\"Not Found\")*(F3=\"\")*(F4=\"\")*(F5=\"\")),1,0)"));
      var1.addCell(new Formula(2, 36, "HYPERLINK(\"http://www.amazon.co.uk/exec/obidos/ASIN/0571058086qid=1099836249/sr=1-3/ref=sr_1_11_3/202-6017285-1620664\",  \"Long hyperlink\")"));
      var1.addCell(new Formula(2, 37, "1234567+2699"));
      var1.addCell(new Label(3, 37, "1234567+2699"));
      var1.addCell(new Formula(2, 38, "IF(ISERROR(G25/G29),0,-1)"));
      var1.addCell(new Label(3, 38, "IF(ISERROR(G25/G29),0,-1)"));
      var1.addCell(new Formula(2, 39, "SEARCH(\"C\",D40)"));
      var1.addCell(new Label(3, 39, "SEARCH(\"C\",D40)"));
      var1.addCell(new Formula(2, 40, "#REF!"));
      var1.addCell(new Label(3, 40, "#REF!"));
      var1.addCell(new Number(1, 41, 79.0));
      var1.addCell(new Formula(2, 41, "--B42"));
      var1.addCell(new Label(3, 41, "--B42"));
      var1.addCell(new Formula(2, 42, "CHOOSE(3,A1,A2,A3,A4"));
      var1.addCell(new Label(3, 42, "CHOOSE(3,A1,A2,A3,A4"));
      var1.addCell(new Formula(2, 43, "A4-A3-A2"));
      var1.addCell(new Label(3, 43, "A4-A3-A2"));
      var1.addCell(new Formula(2, 44, "F29+F34+F41+F48+F55+F62+F69+F76+F83+F90+F97+F104+F111+F118+F125+F132+F139+F146+F153+F160+F167+F174+F181+F188+F195+F202+F209+F216+F223+F230+F237+F244+F251+F258+F265+F272+F279+F286+F293+F300+F305+F308"));
      var1.addCell(new Label(3, 44, "F29+F34+F41+F48+F55+F62+F69+F76+F83+F90+F97+F104+F111+F118+F125+F132+F139+F146+F153+F160+F167+F174+F181+F188+F195+F202+F209+F216+F223+F230+F237+F244+F251+F258+F265+F272+F279+F286+F293+F300+F305+F308"));
      var1.addCell(new Number(1, 45, 17.0));
      var1.addCell(new Formula(2, 45, "formulavalue+5"));
      var1.addCell(new Label(3, 45, "formulavalue+5"));
   }

   private void writeImageSheet(WritableSheet var1) throws WriteException {
      var1.addCell(new Label(0, 0, "Weald & Downland Open Air Museum, Sussex"));
      var1.addImage(new WritableImage(0.0, 3.0, 5.0, 7.0, new File("resources/wealdanddownland.png")));
      var1.addCell(new Label(0, 12, "Merchant Adventurers Hall, York"));
      var1.addImage(new WritableImage(5.0, 12.0, 4.0, 10.0, new File("resources/merchantadventurers.png")));
   }

   private void writeLabelFormatSheet(WritableSheet var1) throws WriteException {
      var1.setColumnView(0, 60);
      var1.addCell(new Label(0, 0, "Arial Fonts"));
      var1.addCell(new Label(1, 0, "10pt"));
      var1.addCell(new Label(2, 0, "Normal"));
      var1.addCell(new Label(3, 0, "12pt"));
      WritableCellFormat var4 = new WritableCellFormat(new WritableFont(WritableFont.ARIAL, 12));
      var4.setWrap(true);
      var1.addCell(new Label(4, 0, "Normal", var4));
      var1.addCell(new Label(2, 2, "BOLD", new WritableCellFormat(new WritableFont(WritableFont.ARIAL, 10, WritableFont.BOLD))));
      var1.addCell(new Label(4, 2, "BOLD", new WritableCellFormat(new WritableFont(WritableFont.ARIAL, 12, WritableFont.BOLD))));
      var1.addCell(new Label(2, 4, "Italic", new WritableCellFormat(new WritableFont(WritableFont.ARIAL, 10, WritableFont.NO_BOLD, true))));
      var1.addCell(new Label(4, 4, "Italic", new WritableCellFormat(new WritableFont(WritableFont.ARIAL, 12, WritableFont.NO_BOLD, true))));
      WritableCellFormat var2 = new WritableCellFormat(new WritableFont(WritableFont.TIMES, 10));
      var1.addCell(new Label(0, 7, "Times Fonts", var2));
      var1.addCell(new Label(1, 7, "10pt", var2));
      var1.addCell(new Label(2, 7, "Normal", var2));
      var1.addCell(new Label(3, 7, "12pt", var2));
      WritableFont var3 = new WritableFont(WritableFont.TIMES, 12);
      var1.addCell(new Label(4, 7, "Normal", new WritableCellFormat(var3)));
      var1.addCell(new Label(2, 9, "BOLD", new WritableCellFormat(new WritableFont(WritableFont.TIMES, 10, WritableFont.BOLD))));
      var1.addCell(new Label(4, 9, "BOLD", new WritableCellFormat(new WritableFont(WritableFont.TIMES, 12, WritableFont.BOLD))));
      var1.setColumnView(6, 22);
      var1.setColumnView(7, 22);
      var1.setColumnView(8, 22);
      var1.setColumnView(9, 22);
      var1.addCell(new Label(0, 11, "Underlining"));
      var1.addCell(new Label(6, 11, "Underline", new WritableCellFormat(new WritableFont(WritableFont.ARIAL, 10, WritableFont.NO_BOLD, false, UnderlineStyle.SINGLE))));
      var1.addCell(new Label(7, 11, "Double Underline", new WritableCellFormat(new WritableFont(WritableFont.ARIAL, 10, WritableFont.NO_BOLD, false, UnderlineStyle.DOUBLE))));
      var1.addCell(new Label(8, 11, "Single Accounting Underline", new WritableCellFormat(new WritableFont(WritableFont.ARIAL, 10, WritableFont.NO_BOLD, false, UnderlineStyle.SINGLE_ACCOUNTING))));
      var1.addCell(new Label(9, 11, "Double Accounting Underline", new WritableCellFormat(new WritableFont(WritableFont.ARIAL, 10, WritableFont.NO_BOLD, false, UnderlineStyle.DOUBLE_ACCOUNTING))));
      WritableCellFormat var5 = new WritableCellFormat(new WritableFont(WritableFont.TIMES, 14, WritableFont.BOLD, false, UnderlineStyle.SINGLE));
      var1.addCell(new Label(6, 12, "Times 14 Bold Underline", var5));
      var1.addCell(new Label(6, 13, "Arial 18 Bold Italic Underline", new WritableCellFormat(new WritableFont(WritableFont.ARIAL, 18, WritableFont.BOLD, true, UnderlineStyle.SINGLE))));
      var1.addCell(new Label(0, 15, "Script styles"));
      var1.addCell(new Label(1, 15, "superscript", new WritableCellFormat(new WritableFont(WritableFont.ARIAL, 10, WritableFont.NO_BOLD, false, UnderlineStyle.NO_UNDERLINE, Colour.BLACK, ScriptStyle.SUPERSCRIPT))));
      var1.addCell(new Label(2, 15, "subscript", new WritableCellFormat(new WritableFont(WritableFont.ARIAL, 10, WritableFont.NO_BOLD, false, UnderlineStyle.NO_UNDERLINE, Colour.BLACK, ScriptStyle.SUBSCRIPT))));
      var1.addCell(new Label(0, 17, "Colours"));
      var1.addCell(new Label(2, 17, "Red", new WritableCellFormat(new WritableFont(WritableFont.ARIAL, 10, WritableFont.NO_BOLD, false, UnderlineStyle.NO_UNDERLINE, Colour.RED))));
      var1.addCell(new Label(2, 18, "Blue", new WritableCellFormat(new WritableFont(WritableFont.ARIAL, 10, WritableFont.NO_BOLD, false, UnderlineStyle.NO_UNDERLINE, Colour.BLUE))));
      WritableFont var9 = new WritableFont(WritableFont.ARIAL);
      var9.setColour(Colour.LIME);
      var2 = new WritableCellFormat(var9);
      var2.setWrap(true);
      var1.addCell(new Label(4, 18, "Modified palette - was lime, now red", var2));
      var2 = new WritableCellFormat();
      var2.setWrap(true);
      var2.setBackground(Colour.GRAY_50);
      var1.addCell(new Label(2, 19, "Grey background", var2));
      var9 = new WritableFont(WritableFont.ARIAL, 10, WritableFont.NO_BOLD, false, UnderlineStyle.NO_UNDERLINE, Colour.YELLOW);
      WritableCellFormat var6 = new WritableCellFormat(var9);
      var6.setWrap(true);
      var6.setBackground(Colour.BLUE);
      var1.addCell(new Label(2, 20, "Blue background, yellow foreground", var6));
      var2 = new WritableCellFormat(var9);
      var2.setWrap(true);
      var2.setBackground(Colour.PALETTE_BLACK);
      var1.addCell(new Label(3, 20, "Black background, yellow foreground", var2));
      var1.addCell(new Label(0, 22, "Null label"));
      var1.addCell(new Label(2, 22, (String)null));
      var1.addCell(new Label(0, 24, "A very long label, more than 255 characters\nRejoice O shores\nSing O bells\nBut I with mournful tread\nWalk the deck my captain lies\nFallen cold and dead\nSummer surprised, coming over the Starnbergersee\nWith a shower of rain. We stopped in the Colonnade\nA very long label, more than 255 characters\nRejoice O shores\nSing O bells\nBut I with mournful tread\nWalk the deck my captain lies\nFallen cold and dead\nSummer surprised, coming over the Starnbergersee\nWith a shower of rain. We stopped in the Colonnade\nA very long label, more than 255 characters\nRejoice O shores\nSing O bells\nBut I with mournful tread\nWalk the deck my captain lies\nFallen cold and dead\nSummer surprised, coming over the Starnbergersee\nWith a shower of rain. We stopped in the Colonnade\nA very long label, more than 255 characters\nRejoice O shores\nSing O bells\nBut I with mournful tread\nWalk the deck my captain lies\nFallen cold and dead\nSummer surprised, coming over the Starnbergersee\nWith a shower of rain. We stopped in the Colonnade\nAnd sat and drank coffee an talked for an hour\n", var4));
      var2 = new WritableCellFormat();
      var2.setOrientation(Orientation.VERTICAL);
      var1.addCell(new Label(0, 26, "Vertical orientation", var2));
      var2 = new WritableCellFormat();
      var2.setOrientation(Orientation.PLUS_90);
      var1.addCell(new Label(1, 26, "Plus 90", var2));
      var2 = new WritableCellFormat();
      var2.setOrientation(Orientation.MINUS_90);
      var1.addCell(new Label(2, 26, "Minus 90", var2));
      var1.addCell(new Label(0, 28, "Modified row height"));
      var1.setRowView(28, 480);
      var1.addCell(new Label(0, 29, "Collapsed row"));
      var1.setRowView(29, true);

      Label var16;
      label21: {
         MalformedURLException var14;
         label20: {
            WritableHyperlink var18;
            WritableHyperlink var19;
            try {
               var16 = new Label(0, 30, "Hyperlink to home page");
               var1.addCell(var16);
               URL var17 = new URL("http://www.andykhan.com/jexcelapi");
               var18 = new WritableHyperlink(0, 30, 8, 31, var17);
               var1.addHyperlink(var18);
               var18 = new WritableHyperlink(7, 30, 9, 31, var17);
               var1.addHyperlink(var18);
               var16 = new Label(4, 2, "File hyperlink to documentation");
               var1.addCell(var16);
               File var20 = new File("../jexcelapi/docs/index.html");
               var19 = new WritableHyperlink(0, 32, 8, 32, var20, "JExcelApi Documentation");
               var1.addHyperlink(var19);
               var19 = new WritableHyperlink;
            } catch (MalformedURLException var8) {
               var14 = var8;
               break label20;
            }

            try {
               var19.<init>(0, 34, 8, 34, "Link to another cell", var1, 0, 180, 1, 181);
               var1.addHyperlink(var19);
               File var21 = new File("\\\\localhost\\file.txt");
               var18 = new WritableHyperlink(0, 36, 8, 36, var21);
               var1.addHyperlink(var18);
               URL var22 = new URL("http://www.amazon.co.uk/exec/obidos/ASIN/0571058086/qid=1099836249/sr=1-3/ref=sr_1_11_3/202-6017285-1620664");
               var19 = new WritableHyperlink(0, 38, 0, 38, var22);
               var1.addHyperlink(var19);
               break label21;
            } catch (MalformedURLException var7) {
               var14 = var7;
            }
         }

         System.err.println(var14.toString());
      }

      var16 = new Label(5, 35, "Merged cells", var5);
      var1.mergeCells(5, 35, 8, 37);
      var1.addCell(var16);
      var1.addCell(new Label(5, 38, "More merged cells"));
      Range var23 = var1.mergeCells(5, 38, 8, 41);
      var1.insertRow(40);
      var1.removeRow(39);
      var1.unmergeCells(var23);
      var2 = new WritableCellFormat();
      var2.setAlignment(Alignment.CENTRE);
      var1.addCell(new Label(5, 42, "Centred across merged cells", var2));
      var1.mergeCells(5, 42, 10, 42);
      var2 = new WritableCellFormat();
      var2.setBorder(Border.ALL, BorderLineStyle.THIN);
      var2.setBackground(Colour.GRAY_25);
      var1.addCell(new Label(3, 44, "Merged with border", var2));
      var1.mergeCells(3, 44, 4, 46);
      var1.addCell(new Label(0, 49, "Courier fonts", new WritableCellFormat(new WritableFont(WritableFont.COURIER, 10))));
      var1.addCell(new Label(0, 50, "Tahoma fonts", new WritableCellFormat(new WritableFont(WritableFont.TAHOMA, 12))));
      var1.addCell(new Label(0, 51, "Bespoke Windgdings 2", new WritableCellFormat(new WritableFont(WritableFont.createFont("Wingdings 2"), 10))));
      var2 = new WritableCellFormat(var3);
      var2.setShrinkToFit(true);
      var1.addCell(new Label(3, 53, "Shrunk to fit", var2));
      var1.addCell(new Label(3, 55, "Some long wrapped text in a merged cell", var4));
      var1.mergeCells(3, 55, 4, 55);
      var16 = new Label(0, 57, "A cell with a comment");
      WritableCellFeatures var12 = new WritableCellFeatures();
      var12.setComment("the cell comment");
      var16.setCellFeatures(var12);
      var1.addCell(var16);
      var16 = new Label(0, 59, "A cell with a long comment");
      var12 = new WritableCellFeatures();
      var12.setComment("a very long cell comment indeed that won't fit inside a standard comment box, so a larger comment box is used instead", 5.0, 6.0);
      var16.setCellFeatures(var12);
      var1.addCell(var16);
      var2 = new WritableCellFormat(var3);
      var2.setIndentation(4);
      var1.addCell(new Label(0, 61, "Some indented text", var2));
      var1.addCell(new Label(0, 63, "Data validation:  list"));
      Blank var24 = new Blank(1, 63);
      WritableCellFeatures var10 = new WritableCellFeatures();
      ArrayList var15 = new ArrayList();
      var15.add("bagpuss");
      var15.add("clangers");
      var15.add("ivor the engine");
      var15.add("noggin the nog");
      var10.setDataValidationList(var15);
      var24.setCellFeatures(var10);
      var1.addCell(var24);
      var1.addCell(new Label(0, 64, "Data validation:  number > 4.5"));
      var24 = new Blank(1, 64);
      var10 = new WritableCellFeatures();
      var10.setNumberValidation(4.5, WritableCellFeatures.GREATER_THAN);
      var24.setCellFeatures(var10);
      var1.addCell(var24);
      var1.addCell(new Label(0, 65, "Data validation:  named range"));
      var1.addCell(new Label(4, 65, "tiger"));
      var1.addCell(new Label(5, 65, "sword"));
      var1.addCell(new Label(6, 65, "honour"));
      var1.addCell(new Label(7, 65, "company"));
      var1.addCell(new Label(8, 65, "victory"));
      var1.addCell(new Label(9, 65, "fortress"));
      Blank var11 = new Blank(1, 65);
      WritableCellFeatures var25 = new WritableCellFeatures();
      var25.setDataValidationRange("validation_range");
      var11.setCellFeatures(var25);
      var1.addCell(var11);
      var1.setRowGroup(39, 45, false);
      var1.addCell(new Label(0, 66, "Block of cells B67-F71 with data validation"));
      var15 = new ArrayList();
      var15.add("Achilles");
      var15.add("Agamemnon");
      var15.add("Hector");
      var15.add("Odysseus");
      var15.add("Patroclus");
      var15.add("Nestor");
      var11 = new Blank(1, 66);
      var25 = new WritableCellFeatures();
      var25.setDataValidationList(var15);
      var11.setCellFeatures(var25);
      var1.addCell(var11);
      var1.applySharedDataValidation(var11, 4, 4);
      var25 = new WritableCellFeatures();
      var25.setDataValidationRange("");
      Label var13 = new Label(0, 71, "Read only cell using empty data validation");
      var13.setCellFeatures(var25);
      var1.addCell(var13);
      var1.setRowGroup(39, 45, false);
   }

   private void writeLabelsSheet(WritableSheet var1) throws WriteException {
      var1.getSettings().setProtected(true);
      var1.getSettings().setPassword("jxl");
      var1.getSettings().setVerticalFreeze(5);
      var1.getSettings().setDefaultRowHeight(500);
      WritableFont var3 = new WritableFont(WritableFont.ARIAL, 12);
      var3.setItalic(true);
      WritableCellFormat var6 = new WritableCellFormat(var3);
      CellView var4 = new CellView();
      var4.setSize(6400);
      var4.setFormat(var6);
      var1.setColumnView(0, var4);
      var1.setColumnView(1, 15);

      int var2;
      Label var5;
      Label var8;
      for(var2 = 0; var2 < 61; ++var2) {
         var8 = new Label(0, var2, "Common Label");
         var5 = new Label(1, var2, "Distinct label number " + var2);
         var1.addCell(var8);
         var1.addCell(var5);
      }

      var8 = new Label(0, 61, "Common Label", var6);
      var5 = new Label(1, 61, "1-1234567890", var6);
      Label var7 = new Label(2, 61, "2-1234567890", var6);
      var1.addCell(var8);
      var1.addCell(var5);
      var1.addCell(var7);

      for(var2 = 62; var2 < 200; ++var2) {
         var7 = new Label(0, var2, "Common Label");
         var8 = new Label(1, var2, "Distinct label number " + var2);
         var1.addCell(var7);
         var1.addCell(var8);
      }

      var3 = new WritableFont(WritableFont.TIMES, 10, WritableFont.BOLD);
      var3.setColour(Colour.RED);
      var6 = new WritableCellFormat(var3);
      var6.setWrap(true);
      var1.addCell(new Label(0, 205, "Different format", var6));
      var1.addCell(new Label(5, 2, "A column for autosizing", var6));
      var1.addCell(new Label(5, 4, "Another label, longer this time and in a different font"));
      CellView var9 = new CellView();
      var9.setAutosize(true);
      var1.setColumnView(5, var9);
   }

   private void writeNumberFormatSheet(WritableSheet var1) throws WriteException {
      WritableCellFormat var4 = new WritableCellFormat(WritableWorkbook.ARIAL_10_PT);
      var4.setWrap(true);
      var1.setColumnView(0, 20);
      var1.setColumnView(4, 20);
      var1.setColumnView(5, 20);
      var1.setColumnView(6, 20);
      var1.addCell(new Label(0, 0, "+/- Pi - default format", var4));
      var1.addCell(new Number(1, 0, 3.1415926535));
      var1.addCell(new Number(2, 0, -3.1415926535));
      var1.addCell(new Label(0, 1, "+/- Pi - integer format", var4));
      WritableCellFormat var5 = new WritableCellFormat(NumberFormats.INTEGER);
      var1.addCell(new Number(1, 1, 3.1415926535, var5));
      var1.addCell(new Number(2, 1, -3.1415926535, var5));
      var1.addCell(new Label(0, 2, "+/- Pi - float 2dps", var4));
      var5 = new WritableCellFormat(NumberFormats.FLOAT);
      var1.addCell(new Number(1, 2, 3.1415926535, var5));
      var1.addCell(new Number(2, 2, -3.1415926535, var5));
      var1.addCell(new Label(0, 3, "+/- Pi - custom 3dps", var4));
      var5 = new WritableCellFormat(new NumberFormat("#.###"));
      var1.addCell(new Number(1, 3, 3.1415926535, var5));
      var1.addCell(new Number(2, 3, -3.1415926535, var5));
      var1.addCell(new Label(0, 4, "+/- Pi - custom &3.14", var4));
      var5 = new WritableCellFormat(new NumberFormat("&#.00"));
      var1.addCell(new Number(1, 4, 3.1415926535, var5));
      var1.addCell(new Number(2, 4, -3.1415926535, var5));
      var1.addCell(new Label(0, 5, "+/- Pi - custom Text #.### Text", var4));
      var5 = new WritableCellFormat(new NumberFormat("Text#.####Text"));
      var1.addCell(new Number(1, 5, 3.1415926535, var5));
      var1.addCell(new Number(2, 5, -3.1415926535, var5));
      var1.addCell(new Label(4, 0, "+/- Bilko default format"));
      var1.addCell(new Number(5, 0, 1.5042699E7));
      var1.addCell(new Number(6, 0, -1.5042699E7));
      var1.addCell(new Label(4, 1, "+/- Bilko float format"));
      var5 = new WritableCellFormat(NumberFormats.FLOAT);
      var1.addCell(new Number(5, 1, 1.5042699E7, var5));
      var1.addCell(new Number(6, 1, -1.5042699E7, var5));
      var1.addCell(new Label(4, 2, "+/- Thousands separator"));
      var5 = new WritableCellFormat(NumberFormats.THOUSANDS_INTEGER);
      var1.addCell(new Number(5, 2, 1.5042699E7, var5));
      var1.addCell(new Number(6, 2, -1.5042699E7, var5));
      var1.addCell(new Label(4, 3, "+/- Accounting red - added 0.01"));
      var5 = new WritableCellFormat(NumberFormats.ACCOUNTING_RED_FLOAT);
      var1.addCell(new Number(5, 3, 1.504269901E7, var5));
      var1.addCell(new Number(6, 3, -1.504269901E7, var5));
      var1.addCell(new Label(4, 4, "+/- Percent"));
      var5 = new WritableCellFormat(NumberFormats.PERCENT_INTEGER);
      var1.addCell(new Number(5, 4, 1.5042699E7, var5));
      var1.addCell(new Number(6, 4, -1.5042699E7, var5));
      var1.addCell(new Label(4, 5, "+/- Exponential - 2dps"));
      var5 = new WritableCellFormat(NumberFormats.EXPONENTIAL);
      var1.addCell(new Number(5, 5, 1.5042699E7, var5));
      var1.addCell(new Number(6, 5, -1.5042699E7, var5));
      var1.addCell(new Label(4, 6, "+/- Custom exponentional - 3dps", var4));
      var5 = new WritableCellFormat(new NumberFormat("0.000E0"));
      var1.addCell(new Number(5, 6, 1.5042699E7, var5));
      var1.addCell(new Number(6, 6, -1.5042699E7, var5));
      var1.addCell(new Label(4, 7, "Custom neg brackets", var4));
      var5 = new WritableCellFormat(new NumberFormat("#,##0;(#,##0)"));
      var1.addCell(new Number(5, 7, 1.5042699E7, var5));
      var1.addCell(new Number(6, 7, -1.5042699E7, var5));
      var1.addCell(new Label(4, 8, "Custom neg brackets 2", var4));
      var5 = new WritableCellFormat(new NumberFormat("#,##0;(#,##0)a"));
      var1.addCell(new Number(5, 8, 1.5042699E7, var5));
      var1.addCell(new Number(6, 8, -1.5042699E7, var5));
      var1.addCell(new Label(4, 9, "Custom percent", var4));
      var1.addCell(new Number(5, 9, 3.14159265, new WritableCellFormat(new NumberFormat("0.0%"))));
      var1.addCell(new Label(0, 10, "Boolean - TRUE"));
      var1.addCell(new Boolean(1, 10, true));
      var1.addCell(new Label(0, 11, "Boolean - FALSE"));
      var1.addCell(new Boolean(1, 11, false));
      var1.addCell(new Label(0, 12, "A hidden cell->"));
      var1.addCell(new Number(1, 12, 17.0, WritableWorkbook.HIDDEN_STYLE));
      var1.addCell(new Label(4, 19, "Currency formats"));
      var1.addCell(new Label(4, 21, "UK Pound"));
      var1.addCell(new Number(5, 21, 12345.0, new WritableCellFormat(new NumberFormat("� #,###.00", NumberFormat.COMPLEX_FORMAT))));
      var1.addCell(new Label(4, 22, "Euro 1"));
      var1.addCell(new Number(5, 22, 12345.0, new WritableCellFormat(new NumberFormat("[$�-2] #,###.00", NumberFormat.COMPLEX_FORMAT))));
      var1.addCell(new Label(4, 23, "Euro 2"));
      var1.addCell(new Number(5, 23, 12345.0, new WritableCellFormat(new NumberFormat("#,###.00[$�-1]", NumberFormat.COMPLEX_FORMAT))));
      var1.addCell(new Label(4, 24, "Dollar"));
      var1.addCell(new Number(5, 24, 12345.0, new WritableCellFormat(new NumberFormat("[$$-409] #,###.00", NumberFormat.COMPLEX_FORMAT))));
      var1.addCell(new Label(4, 25, "Japanese Yen"));
      var1.addCell(new Number(5, 25, 12345.0, new WritableCellFormat(new NumberFormat("[$�-411] #,###.00", NumberFormat.COMPLEX_FORMAT))));
      var1.addCell(new Label(4, 30, "Fraction formats"));
      var1.addCell(new Label(4, 32, "One digit fraction format", var4));
      var1.addCell(new Number(5, 32, 3.18279, new WritableCellFormat(NumberFormats.FRACTION_ONE_DIGIT)));
      var1.addCell(new Label(4, 33, "Two digit fraction format", var4));
      var1.addCell(new Number(5, 33, 3.18279, new WritableCellFormat(NumberFormats.FRACTION_TWO_DIGITS)));
      var1.addCell(new Label(4, 34, "Three digit fraction format (improper)", var4));
      var1.addCell(new Number(5, 34, 3.18927, new WritableCellFormat(new NumberFormat("???/???", NumberFormat.COMPLEX_FORMAT))));
      var1.addCell(new Label(4, 35, "Three digit fraction format (proper)", var4));
      var1.addCell(new Number(5, 35, 3.18927, new WritableCellFormat(new NumberFormat("# ???/???", NumberFormat.COMPLEX_FORMAT))));

      int var2;
      int var3;
      for(var2 = 0; var2 < 100; ++var2) {
         for(var3 = 8; var3 < 108; ++var3) {
            var1.addCell(new Number(var3, var2, (double)(var3 + var2)));
         }
      }

      for(var2 = 101; var2 < 3000; ++var2) {
         for(var3 = 0; var3 < 25; ++var3) {
            var1.addCell(new Number(var3, var2, (double)(var3 + var2)));
         }
      }

   }

   public void write() throws IOException, WriteException {
      WorkbookSettings var1 = new WorkbookSettings();
      var1.setLocale(new Locale("en", "EN"));
      WritableWorkbook var8 = Workbook.createWorkbook(new File(this.filename), var1);
      this.workbook = var8;
      WritableSheet var5 = var8.createSheet("Number Formats", 0);
      WritableSheet var6 = this.workbook.createSheet("Date Formats", 1);
      WritableSheet var7 = this.workbook.createSheet("Label Formats", 2);
      WritableSheet var9 = this.workbook.createSheet("Borders", 3);
      WritableSheet var4 = this.workbook.createSheet("Labels", 4);
      WritableSheet var2 = this.workbook.createSheet("Formulas", 5);
      WritableSheet var3 = this.workbook.createSheet("Images", 6);
      this.workbook.setColourRGB(Colour.LIME, 255, 0, 0);
      this.workbook.addNameArea("namedrange", var9, 1, 11, 5, 14);
      this.workbook.addNameArea("validation_range", var7, 4, 65, 9, 65);
      this.workbook.addNameArea("formulavalue", var2, 1, 45, 1, 45);
      var4.getSettings().setPrintArea(4, 4, 15, 35);
      this.writeLabelFormatSheet(var7);
      this.writeNumberFormatSheet(var5);
      this.writeDateFormatSheet(var6);
      this.writeBordersSheet(var9);
      this.writeLabelsSheet(var4);
      this.writeFormulaSheet(var2);
      this.writeImageSheet(var3);
      this.workbook.write();
      this.workbook.close();
   }
}
